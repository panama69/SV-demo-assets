//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Script
{
    using System;
    using System.Xml;
    using System.Xml.Schema;
    using System.Collections.Generic;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.CheckpointFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Ext.CheckpointLogicOperators;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Ext.CheckpointRules;
    using HP.ST.Ext.CheckpointRules.ArrayCheckpoints;
    
    
    public partial class WorkFlowScript
    {
        
        private void set_StServiceCallActivity4_checkpoints(STActivityBase activity)
        {
            VTDPropertyInfoBase stracturalOutputEnvelope = new VTDPropertyInfoBase("OutputEnvelope", "/*[local-name(.)=\'Envelope\'][1]");
            IList<VTDPropertyInfoBase> stracturalPropsInfo = new List<VTDPropertyInfoBase>();
            CpValObj ExpectedSchema = new CpValObj("<?xml version=\"1.0\" encoding=\"utf-16\"?><xs:schema xmlns=\"http://schemas.xmlsoap.o" +
                    "rg/soap/envelope/\" xmlns:vtd=\"hp.visual_test_designer\" elementFormDefault=\"quali" +
                    "fied\" targetNamespace=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xs=\"http" +
                    "://www.w3.org/2001/XMLSchema\"><xs:import schemaLocation=\"EmbeddedResources/Claim" +
                    "Proce\\webServices\\ClaimProce\\_4.xsd\" namespace=\"http://hp.com/SOAQ/ServiceSimula" +
                    "tion/2010/demo/01/Imports\" /><xs:attribute name=\"fullName\" type=\"xs:string\" /><x" +
                    "s:attribute name=\"group\" type=\"xs:string\" /><xs:attribute name=\"serialize\" type=" +
                    "\"xs:string\" /><xs:attribute name=\"argType\" type=\"xs:string\" /><xs:element name=\"" +
                    "Envelope\" type=\"Envelope\" /><xs:complexType name=\"Envelope\"><xs:sequence><xs:ele" +
                    "ment minOccurs=\"0\" ref=\"Header\" /><xs:element minOccurs=\"1\" ref=\"Body\" /></xs:se" +
                    "quence><xs:anyAttribute processContents=\"lax\" /></xs:complexType><xs:element nam" +
                    "e=\"Header\" type=\"Header\" /><xs:complexType name=\"Header\"><xs:sequence xmlns=\"\"><" +
                    "xs:any minOccurs=\"0\" maxOccurs=\"unbounded\" processContents=\"lax\" /></xs:sequence" +
                    "><xs:anyAttribute processContents=\"lax\" /></xs:complexType><xs:element name=\"Bod" +
                    "y\" type=\"Body\" /><xs:complexType name=\"Body\"><xs:sequence xmlns=\"\"><xs:element x" +
                    "mlns:q1=\"http://hp.com/SOAQ/ServiceSimulation/2010/demo/01\" ref=\"q1:enterClaimRe" +
                    "sponse\" /></xs:sequence><xs:anyAttribute namespace=\"##any\" processContents=\"lax\"" +
                    "><xs:annotation><xs:documentation>Prose in the spec does not specify that attrib" +
                    "utes are allowed on the Body element</xs:documentation></xs:annotation></xs:anyA" +
                    "ttribute></xs:complexType><xs:attribute name=\"mustUnderstand\"><xs:simpleType><xs" +
                    ":restriction base=\"xs:boolean\"><xs:pattern value=\"0|1\" /></xs:restriction></xs:s" +
                    "impleType></xs:attribute><xs:attribute name=\"actor\" type=\"xs:anyURI\" /><xs:simpl" +
                    "eType name=\"encodingStyle\"><xs:annotation><xs:documentation>\'encodingStyle\' indi" +
                    "cates any canonicalization conventions followed in the contents of the containin" +
                    "g element.  For example, the value \'http://schemas.xmlsoap.org/soap/encoding/\' i" +
                    "ndicates the pattern described in SOAP specification</xs:documentation></xs:anno" +
                    "tation><xs:list itemType=\"xs:anyURI\" /></xs:simpleType><xs:attribute name=\"encod" +
                    "ingStyle\" type=\"encodingStyle\" /><xs:attributeGroup name=\"encodingStyle\"><xs:att" +
                    "ribute ref=\"encodingStyle\" /></xs:attributeGroup><xs:element name=\"Fault\" type=\"" +
                    "Fault\" /><xs:complexType name=\"Fault\" final=\"extension\"><xs:annotation><xs:docum" +
                    "entation>Fault reporting structure</xs:documentation></xs:annotation><xs:sequenc" +
                    "e><xs:element name=\"faultcode\" type=\"xs:QName\" /><xs:element name=\"faultstring\" " +
                    "type=\"xs:string\" /><xs:element minOccurs=\"0\" name=\"faultactor\" type=\"xs:anyURI\" " +
                    "/><xs:element minOccurs=\"0\" name=\"detail\" type=\"detail\" /></xs:sequence></xs:com" +
                    "plexType><xs:complexType name=\"detail\"><xs:sequence><xs:any minOccurs=\"0\" maxOcc" +
                    "urs=\"unbounded\" namespace=\"##any\" processContents=\"lax\" /></xs:sequence><xs:anyA" +
                    "ttribute namespace=\"##any\" processContents=\"lax\" /></xs:complexType></xs:schema>" +
                    "", XmlTypeCode.None);
            stracturalPropsInfo.Add(stracturalOutputEnvelope);
            BaseCPRule StracturalRule = new StracturalRule(activity, ExpectedSchema, stracturalPropsInfo);
            activity.AddCheckpointRule(StracturalRule);

        }
        
        private void set_StServiceCallActivity5_checkpoints(STActivityBase activity)
        {
            VTDPropertyInfoBase stracturalOutputEnvelope = new VTDPropertyInfoBase("OutputEnvelope", "/*[local-name(.)=\'Envelope\'][1]");
            IList<VTDPropertyInfoBase> stracturalPropsInfo = new List<VTDPropertyInfoBase>();
            CpValObj ExpectedSchema = new CpValObj("<?xml version=\"1.0\" encoding=\"utf-16\"?><xs:schema xmlns=\"http://schemas.xmlsoap.o" +
                    "rg/soap/envelope/\" xmlns:vtd=\"hp.visual_test_designer\" elementFormDefault=\"quali" +
                    "fied\" targetNamespace=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xs=\"http" +
                    "://www.w3.org/2001/XMLSchema\"><xs:import schemaLocation=\"EmbeddedResources/Claim" +
                    "Proce\\webServices\\ClaimProce\\_4.xsd\" namespace=\"http://hp.com/SOAQ/ServiceSimula" +
                    "tion/2010/demo/01/Imports\" /><xs:attribute name=\"fullName\" type=\"xs:string\" /><x" +
                    "s:attribute name=\"group\" type=\"xs:string\" /><xs:attribute name=\"serialize\" type=" +
                    "\"xs:string\" /><xs:attribute name=\"argType\" type=\"xs:string\" /><xs:element name=\"" +
                    "Envelope\" type=\"Envelope\" /><xs:complexType name=\"Envelope\"><xs:sequence><xs:ele" +
                    "ment minOccurs=\"0\" ref=\"Header\" /><xs:element minOccurs=\"1\" ref=\"Body\" /></xs:se" +
                    "quence><xs:anyAttribute processContents=\"lax\" /></xs:complexType><xs:element nam" +
                    "e=\"Header\" type=\"Header\" /><xs:complexType name=\"Header\"><xs:sequence xmlns=\"\"><" +
                    "xs:any minOccurs=\"0\" maxOccurs=\"unbounded\" processContents=\"lax\" /></xs:sequence" +
                    "><xs:anyAttribute processContents=\"lax\" /></xs:complexType><xs:element name=\"Bod" +
                    "y\" type=\"Body\" /><xs:complexType name=\"Body\"><xs:sequence xmlns=\"\"><xs:element x" +
                    "mlns:q1=\"http://hp.com/SOAQ/ServiceSimulation/2010/demo/01\" ref=\"q1:getClaimResp" +
                    "onse\" /></xs:sequence><xs:anyAttribute namespace=\"##any\" processContents=\"lax\"><" +
                    "xs:annotation><xs:documentation>Prose in the spec does not specify that attribut" +
                    "es are allowed on the Body element</xs:documentation></xs:annotation></xs:anyAtt" +
                    "ribute></xs:complexType><xs:attribute name=\"mustUnderstand\"><xs:simpleType><xs:r" +
                    "estriction base=\"xs:boolean\"><xs:pattern value=\"0|1\" /></xs:restriction></xs:sim" +
                    "pleType></xs:attribute><xs:attribute name=\"actor\" type=\"xs:anyURI\" /><xs:simpleT" +
                    "ype name=\"encodingStyle\"><xs:annotation><xs:documentation>\'encodingStyle\' indica" +
                    "tes any canonicalization conventions followed in the contents of the containing " +
                    "element.  For example, the value \'http://schemas.xmlsoap.org/soap/encoding/\' ind" +
                    "icates the pattern described in SOAP specification</xs:documentation></xs:annota" +
                    "tion><xs:list itemType=\"xs:anyURI\" /></xs:simpleType><xs:attribute name=\"encodin" +
                    "gStyle\" type=\"encodingStyle\" /><xs:attributeGroup name=\"encodingStyle\"><xs:attri" +
                    "bute ref=\"encodingStyle\" /></xs:attributeGroup><xs:element name=\"Fault\" type=\"Fa" +
                    "ult\" /><xs:complexType name=\"Fault\" final=\"extension\"><xs:annotation><xs:documen" +
                    "tation>Fault reporting structure</xs:documentation></xs:annotation><xs:sequence>" +
                    "<xs:element name=\"faultcode\" type=\"xs:QName\" /><xs:element name=\"faultstring\" ty" +
                    "pe=\"xs:string\" /><xs:element minOccurs=\"0\" name=\"faultactor\" type=\"xs:anyURI\" />" +
                    "<xs:element minOccurs=\"0\" name=\"detail\" type=\"detail\" /></xs:sequence></xs:compl" +
                    "exType><xs:complexType name=\"detail\"><xs:sequence><xs:any minOccurs=\"0\" maxOccur" +
                    "s=\"unbounded\" namespace=\"##any\" processContents=\"lax\" /></xs:sequence><xs:anyAtt" +
                    "ribute namespace=\"##any\" processContents=\"lax\" /></xs:complexType></xs:schema>", XmlTypeCode.None);
            stracturalPropsInfo.Add(stracturalOutputEnvelope);
            BaseCPRule StracturalRule = new StracturalRule(activity, ExpectedSchema, stracturalPropsInfo);
            activity.AddCheckpointRule(StracturalRule);

        }
    }
}
