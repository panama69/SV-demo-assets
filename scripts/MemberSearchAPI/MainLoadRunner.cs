/***************************************************************
    *  DO NOT EDIT THIS FILE!
    *         
    *  This file is automatically generated by HP Service Test.
    *  Manually changing the contents of this file may result in 
    *  loss of information.
    *          
    *  To edit the test, open the file ‘MemberSearchAPI.st’ 
    *  in HP Service Test.
     ***************************************************************/
    
    namespace Script
    {
    using Microsoft.Win32;
    using System;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Threading;
    using System.Xml;
    using System.Xml.Schema;
    using HP.ST.Fwk.SOAReplayAPI;
    using HP.ST.Shared.Utilities;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Fwk.RunTimeFWK.HelperClasses;
    using HP.ST.Fwk.RunTimeFWK.CompositeActivities;
    using HP.ST.Fwk.ReporterFWK;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Ext.BindingImpl.Setters.DataSourceSetters;
    using HP.ST.Ext.LoadRunnerRTAddin;
    using HP.ST.Fwk.JVMLoader;
    
    
    
    public partial class LRWorkFlowScript : LRWorkFlowScriptBase
    {    
    	TestUserCode _userCode = null;
        TestEntities _flow = null;
    	LoadRunner.LrApi lr;
    
    	
    	public BindDirection bind_dir37 = null;
        public BindDirection bind_dir38 = null;
        public HP.ST.Ext.LoadRunnerRTAddin.LoadRunnerDataCursor LoadRunnerDataCursor17 = null;
        public BindDirection bind_dir39 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy LoadRunnerDataCursor17_Policy = null;
        public BindDirection bind_dir40 = null;
        public BindDirection bind_dir41 = null;
        public BindDirection bind_dir42 = null;
        public BindDirection bind_dir43 = null;
        public BindDirection bind_dir44 = null;
        
        public LRWorkFlowScript(ISTRunTimeContext ctx)
            : base(VuserClass.CommandLineArguments, ctx, "test", VuserClass.executionUnitInput)
        {
        	this._context = ctx;
        	UpdateContextWithActionFolder(String.Empty);
        	UpdateTestSettings(ctx);
        }
        
        internal void InitializeComponent()
        {
        	this._context.SnapshotManager.EnableSnapshots = false;
        	this._context.PropertyBag["IsRunningInLodeMode"] = true;
        	_userCode = new TestUserCode();
            _flow = _userCode;
        	LoadInput();
        	this.Activities.Clear();
        	_flow.DataFetchActivity13 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity13");
            _flow.StartActivity1 = new HP.ST.Ext.BasicActivities.StartActivity(_context,"StartActivity1");
            _flow.Loop2 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop2Input>(_context,"Loop2",LoopType.For);
            _flow.DataExporterActivity15 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity15");
            _flow.DataExporterCloseActivity16 = new HP.ST.Ext.BasicActivities.DataExporterCloseActivity(_context,"DataExporterCloseActivity16");
            _flow.EndActivity3 = new HP.ST.Ext.BasicActivities.EndActivity(_context,"EndActivity3");
            _flow.DataDisconnectActivity14 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity14");
            this.LoadRunnerDataCursor17 = new HP.ST.Ext.LoadRunnerRTAddin.LoadRunnerDataCursor(_context,"LoadRunnerDataCursor17");
            this.LoadRunnerDataCursor17_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence12 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence12");
            _flow.StServiceCallActivity7 = new HP.ST.Ext.WebServicesActivities.StServiceCallActivity(_context,"StServiceCallActivity7");
            _flow.StServiceCallActivity6 = new HP.ST.Ext.WebServicesActivities.StServiceCallActivity(_context,"StServiceCallActivity6");
            _flow.StServiceCallActivity5 = new HP.ST.Ext.WebServicesActivities.StServiceCallActivity(_context,"StServiceCallActivity5");
            _flow.DataFetchActivity13.Comment = @"";
            _flow.DataFetchActivity13.IconPath = @"";
            _flow.DataFetchActivity13.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            _flow.DataFetchActivity13.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity13.QueryClassName = @"HP.ST.Ext.CustomDataProviders.LocalDataQuery";
            XmlDocument DataFetchActivity13_QueryParameters_Document = new XmlDocument();
            DataFetchActivity13_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity13Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>0050e89f-6653-4cec-ab78-e64a5b6f1e81</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>Members</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>TableStructure</Name><Value>FirstName,String,|LastName,String,|SSN,String,</Value></QueryParameter><QueryParameter><Name>TableContents</Name><Value>Hercule|Poirot|554-98-0001^Sherlock|Holmes|332-10-0002</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity13_QueryParameters_Document.LoadXml(xmlDataFetchActivity13Params);
            _flow.DataFetchActivity13.QueryParameters = DataFetchActivity13_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("Members", _flow.DataFetchActivity13);
            this.Activities.Add (_flow.DataFetchActivity13);
            _flow.StartActivity1.Comment = @"";
            _flow.StartActivity1.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.StartActivity1.Name = @"Start";
            _flow.StartActivity1.JVM = new HP.ST.Ext.BasicActivities.JVMProperties();
            _flow.StartActivity1.IsJavaUsed = false;
            _flow.StartActivity1.JVM.Classpath = @"%CLASSPATH%";
            _flow.StartActivity1.JVM.AdditionalVMParameters = @"";
            _flow.StartActivity1.JMS = new HP.ST.Ext.BasicActivities.JMSProperties();
            _flow.StartActivity1.IsJmsUsed = false;
            _flow.StartActivity1.JMS.JNDIContextFactory = @"<Select...>";
            _flow.StartActivity1.JMS.JNDIProviderUrl = @"";
            _flow.StartActivity1.JMS.JMSConnectionFactory = @"";
            _flow.StartActivity1.JMS.SecurityPrincipal = @"";
            _flow.StartActivity1.JMS.SecurityCredentials = @"";
            _flow.StartActivity1.JMS.ConnectionsPerProcess = @"1";
            _flow.StartActivity1.JMS.TimeoutOptions = @"DN_User_defined_Timeout";
            _flow.StartActivity1.JMS.UserTimeout = @"20";
            _flow.StartActivity1.JMS.GenerateAutoSelector = @"No";
            _flow.StartActivity1.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            this.Activities.Add (_flow.StartActivity1);
            _flow.Loop2.ConditionAsString = @"Run for 2 iterations";
            _flow.Loop2.NumberOfIterations = (int)2;
            _flow.Loop2.Comment = @"";
            _flow.Loop2.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop2.Name = @"Test Flow";
            _flow.Loop2.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            _flow.Loop2.Activities.Add (this.LoadRunnerDataCursor17);
            _flow.Loop2.Activities.Add (_flow.Sequence12);
            this.Activities.Add (_flow.Loop2);
            _flow.DataExporterActivity15.Comment = @"";
            _flow.DataExporterActivity15.IconPath = @"";
            _flow.DataExporterActivity15.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi73 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter37 = new VTDObjectGetter(pi73);
            VTDPropertyInfoBase pi74 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter37 = new VTDObjectSetter(pi74);
            binding_setter37 = new StringFormaterDecorator(binding_setter37,"{Step.DataFetchActivity13.OutTable}");
            bind_dir37 = new BindDirection(_flow.DataFetchActivity13,binding_getter37,binding_setter37,BindTargetType.ToInProperty);
            _flow.DataExporterActivity15.InDirections.Add(bind_dir37);
            this.Activities.Add (_flow.DataExporterActivity15);
            _flow.DataExporterCloseActivity16.Comment = @"";
            _flow.DataExporterCloseActivity16.IconPath = @"";
            _flow.DataExporterCloseActivity16.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            this.Activities.Add (_flow.DataExporterCloseActivity16);
            _flow.EndActivity3.Comment = @"";
            _flow.EndActivity3.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.EndActivity3.Name = @"End";
            _flow.EndActivity3.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            this.Activities.Add (_flow.EndActivity3);
            _flow.DataDisconnectActivity14.Comment = @"";
            _flow.DataDisconnectActivity14.IconPath = @"";
            _flow.DataDisconnectActivity14.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi75 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter38 = new VTDObjectGetter(pi75);
            VTDPropertyInfoBase pi76 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter38 = new VTDObjectSetter(pi76);
            binding_setter38 = new StringFormaterDecorator(binding_setter38,"{Step.DataFetchActivity13.OutTable}");
            bind_dir38 = new BindDirection(_flow.DataFetchActivity13,binding_getter38,binding_setter38,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity14.InDirections.Add(bind_dir38);
            this.Activities.Add (_flow.DataDisconnectActivity14);
            this.LoadRunnerDataCursor17.Comment = @"";
            this.LoadRunnerDataCursor17.IconPath = @"";
            this.LoadRunnerDataCursor17.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi77 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter39 = new VTDObjectGetter(pi77);
            VTDPropertyInfoBase pi78 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter39 = new VTDObjectSetter(pi78);
            binding_setter39 = new StringFormaterDecorator(binding_setter39,"{Step.DataFetchActivity13.OutTable}");
            bind_dir39 = new BindDirection(_flow.DataFetchActivity13,binding_getter39,binding_setter39,BindTargetType.ToInProperty);
            this.LoadRunnerDataCursor17.InDirections.Add(bind_dir39);
            this.LoadRunnerDataCursor17_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.LoadRunnerDataCursor17_Policy.StartAtSpecificRow = 1;
            this.LoadRunnerDataCursor17_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.LoadRunnerDataCursor17_Policy.EndAtSpecificRow = 2;
            this.LoadRunnerDataCursor17_Policy.StepType = CursorStepType.Forward;
            this.LoadRunnerDataCursor17_Policy.StepSize = 1;
            this.LoadRunnerDataCursor17_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.LoadRunnerDataCursor17.Policy = this.LoadRunnerDataCursor17_Policy;
            this.LoadRunnerDataCursor17.ReportStepData = true;
            _flow.Loop2.BeforeExecuteStepEvent += this.LoadRunnerDataCursor17.ResetCursor;
            _flow.Sequence12.Comment = @"";
            _flow.Sequence12.IconPath = @"";
            _flow.Sequence12.Name = @"Sequence12";
            _flow.Sequence12.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            _flow.Sequence12.Activities.Add (_flow.StServiceCallActivity7);
            _flow.Sequence12.Activities.Add (_flow.StServiceCallActivity6);
            _flow.Sequence12.Activities.Add (_flow.StServiceCallActivity5);
            XmlDocument StServiceCallActivity7_InputEnvelope_Document = new XmlDocument();
            StServiceCallActivity7_InputEnvelope_Document.PreserveWhitespace = true;
            StServiceCallActivity7_InputEnvelope_Document.LoadXml(
@"<Envelope xmlns=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:p1=""http://www.w3.org/2001/XMLSchema-instance""><Body><memberSearch xmlns=""http://hp.com/SOAQ/ServiceSimulation/2010/demo/01""><name><firstName xmlns=""http://schemas.datacontract.org/2004/07/HP.SOAQ.ServiceSimulation.Demo"">{DataSource.Members.FirstName}</firstName><lastName xmlns=""http://schemas.datacontract.org/2004/07/HP.SOAQ.ServiceSimulation.Demo"">{DataSource.Members.LastName}</lastName></name><socialSecurityNumber>{DataSource.Members.SSN}</socialSecurityNumber></memberSearch></Body></Envelope>");
            _flow.StServiceCallActivity7.InputEnvelope = StServiceCallActivity7_InputEnvelope_Document;
            _flow.StServiceCallActivity7.Comment = @"";
            _flow.StServiceCallActivity7.IconPath = @"AddIns\ServiceTest\WSImportTechnology\ictb_service_operations_16.png";
            _flow.StServiceCallActivity7.Name = @"memberSearch";
            _flow.StServiceCallActivity7.TransportProtocol.SOAPProperties.EndpointAddress = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity7.TransportProtocol.SOAPProperties.EndpointAddress}")) ? @"http://dockerclient:7200/MemberAccounts" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity7.TransportProtocol.SOAPProperties.EndpointAddress}");
            _flow.StServiceCallActivity7.TransportProtocol.SOAPProperties.SoapAction = @"http://hp.com/SOAQ/ServiceSimulation/2010/demo/01/IMemberAccounts/memberSearch";
            _flow.StServiceCallActivity7.TransportProtocol.SOAPProperties.ContentType = @"text/xml; charset=utf-8";
            _flow.StServiceCallActivity7.TransportProtocol.SOAPProperties.Timeout = (int)100000;
            _flow.StServiceCallActivity7.Service = @"MemberAccounts";
            _flow.StServiceCallActivity7.Port = @"BasicHttpBinding_IMemberAccounts";
            _flow.StServiceCallActivity7.Operation = @"memberSearch";
            _flow.StServiceCallActivity7.IsOneWay = false;
            _flow.StServiceCallActivity7.SendRequestToService=true;
            _flow.StServiceCallActivity7.FaultExpected=false;
            _flow.StServiceCallActivity7.IsAsync=false;
            _flow.StServiceCallActivity7.TargetNamespace=@"http://hp.com/SOAQ/ServiceSimulation/2010/demo/01";
            _flow.StServiceCallActivity7.ListenOnPort = (int)0;
            _flow.StServiceCallActivity7.StartStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionStart;
            _flow.StServiceCallActivity7.EndStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionEnd;
            _flow.StServiceCallActivity7.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi79 = new VTDPropertyInfoBase("SSN");
            VTDBaseGetter binding_getter40 = new VTDObjectGetter(pi79);
            VTDPropertyInfoBase pi80 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='memberSearch'][1]/*[local-name(.)='socialSecurityNumber'][1]");
            VTDBaseSetter binding_setter40 = new VTDXPathSetter(pi80,XmlTypeCode.String);
            binding_setter40 = new StringFormaterDecorator(binding_setter40,"{DataSource.Members.SSN}");
            bind_dir40 = new BindDirection(this.LoadRunnerDataCursor17,binding_getter40,binding_setter40,BindTargetType.ToInProperty);
            _flow.StServiceCallActivity7.InDirections.Add(bind_dir40);
            VTDPropertyInfoBase pi81 = new VTDPropertyInfoBase("LastName");
            VTDBaseGetter binding_getter41 = new VTDObjectGetter(pi81);
            VTDPropertyInfoBase pi82 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='memberSearch'][1]/*[local-name(.)='name'][1]/*[local-name(.)='lastName'][1]");
            VTDBaseSetter binding_setter41 = new VTDXPathSetter(pi82,XmlTypeCode.String);
            binding_setter41 = new StringFormaterDecorator(binding_setter41,"{DataSource.Members.LastName}");
            bind_dir41 = new BindDirection(this.LoadRunnerDataCursor17,binding_getter41,binding_setter41,BindTargetType.ToInProperty);
            _flow.StServiceCallActivity7.InDirections.Add(bind_dir41);
            VTDPropertyInfoBase pi83 = new VTDPropertyInfoBase("FirstName");
            VTDBaseGetter binding_getter42 = new VTDObjectGetter(pi83);
            VTDPropertyInfoBase pi84 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='memberSearch'][1]/*[local-name(.)='name'][1]/*[local-name(.)='firstName'][1]");
            VTDBaseSetter binding_setter42 = new VTDXPathSetter(pi84,XmlTypeCode.String);
            binding_setter42 = new StringFormaterDecorator(binding_setter42,"{DataSource.Members.FirstName}");
            bind_dir42 = new BindDirection(this.LoadRunnerDataCursor17,binding_getter42,binding_setter42,BindTargetType.ToInProperty);
            _flow.StServiceCallActivity7.InDirections.Add(bind_dir42);
            XmlDocument StServiceCallActivity6_InputEnvelope_Document = new XmlDocument();
            StServiceCallActivity6_InputEnvelope_Document.PreserveWhitespace = true;
            StServiceCallActivity6_InputEnvelope_Document.LoadXml(
@"<Envelope xmlns=""http://schemas.xmlsoap.org/soap/envelope/""><Body><getMemberPlan xmlns=""http://hp.com/SOAQ/ServiceSimulation/2010/demo/01""><memberId>{Step.OutputProperties.StServiceCallActivity7.Body.memberSearchResponse.memberSearchResult.Member[1].memberId}</memberId></getMemberPlan></Body></Envelope>");
            _flow.StServiceCallActivity6.InputEnvelope = StServiceCallActivity6_InputEnvelope_Document;
            _flow.StServiceCallActivity6.Comment = @"";
            _flow.StServiceCallActivity6.IconPath = @"AddIns\ServiceTest\WSImportTechnology\ictb_service_operations_16.png";
            _flow.StServiceCallActivity6.Name = @"getMemberPlan";
            _flow.StServiceCallActivity6.TransportProtocol.SOAPProperties.EndpointAddress = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity6.TransportProtocol.SOAPProperties.EndpointAddress}")) ? @"http://dockerclient:7200/MemberAccounts" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity6.TransportProtocol.SOAPProperties.EndpointAddress}");
            _flow.StServiceCallActivity6.TransportProtocol.SOAPProperties.SoapAction = @"http://hp.com/SOAQ/ServiceSimulation/2010/demo/01/IMemberAccounts/getMemberPlan";
            _flow.StServiceCallActivity6.TransportProtocol.SOAPProperties.ContentType = @"text/xml; charset=utf-8";
            _flow.StServiceCallActivity6.TransportProtocol.SOAPProperties.Timeout = (int)100000;
            _flow.StServiceCallActivity6.Service = @"MemberAccounts";
            _flow.StServiceCallActivity6.Port = @"BasicHttpBinding_IMemberAccounts";
            _flow.StServiceCallActivity6.Operation = @"getMemberPlan";
            _flow.StServiceCallActivity6.IsOneWay = false;
            _flow.StServiceCallActivity6.SendRequestToService=true;
            _flow.StServiceCallActivity6.FaultExpected=false;
            _flow.StServiceCallActivity6.IsAsync=false;
            _flow.StServiceCallActivity6.TargetNamespace=@"http://hp.com/SOAQ/ServiceSimulation/2010/demo/01";
            _flow.StServiceCallActivity6.ListenOnPort = (int)0;
            _flow.StServiceCallActivity6.StartStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionStart;
            _flow.StServiceCallActivity6.EndStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionEnd;
            _flow.StServiceCallActivity6.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi85 = new VTDPropertyInfoBase("OutputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='memberSearchResponse'][1]/*[local-name(.)='memberSearchResult'][1]/*[local-name(.)='Member'][{Array0}]/*[local-name(.)='memberId'][1]");
            VTDBaseGetter binding_getter43 = new VTDXPathGetter(pi85,XmlTypeCode.Long);
            binding_getter43 = new XPathGetterDecorator(binding_getter43,"{Array0}",1);
            VTDPropertyInfoBase pi86 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='getMemberPlan'][1]/*[local-name(.)='memberId'][1]");
            VTDBaseSetter binding_setter43 = new VTDXPathSetter(pi86,XmlTypeCode.Long);
            bind_dir43 = new BindDirection(_flow.StServiceCallActivity7,binding_getter43,binding_setter43,BindTargetType.ToInProperty);
            _flow.StServiceCallActivity6.InDirections.Add(bind_dir43);
            XmlDocument StServiceCallActivity5_InputEnvelope_Document = new XmlDocument();
            StServiceCallActivity5_InputEnvelope_Document.PreserveWhitespace = true;
            StServiceCallActivity5_InputEnvelope_Document.LoadXml(
@"<Envelope xmlns=""http://schemas.xmlsoap.org/soap/envelope/""><Body><getMemberDetail xmlns=""http://hp.com/SOAQ/ServiceSimulation/2010/demo/01""><memberId>{Step.OutputProperties.StServiceCallActivity7.Body.memberSearchResponse.memberSearchResult.Member[1].memberId}</memberId></getMemberDetail></Body></Envelope>");
            _flow.StServiceCallActivity5.InputEnvelope = StServiceCallActivity5_InputEnvelope_Document;
            _flow.StServiceCallActivity5.Comment = @"";
            _flow.StServiceCallActivity5.IconPath = @"AddIns\ServiceTest\WSImportTechnology\ictb_service_operations_16.png";
            _flow.StServiceCallActivity5.Name = @"getMemberDetail";
            _flow.StServiceCallActivity5.TransportProtocol.SOAPProperties.EndpointAddress = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity5.TransportProtocol.SOAPProperties.EndpointAddress}")) ? @"http://dockerclient:7200/MemberAccounts" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity5.TransportProtocol.SOAPProperties.EndpointAddress}");
            _flow.StServiceCallActivity5.TransportProtocol.SOAPProperties.SoapAction = @"http://hp.com/SOAQ/ServiceSimulation/2010/demo/01/IMemberAccounts/getMemberDetail";
            _flow.StServiceCallActivity5.TransportProtocol.SOAPProperties.ContentType = @"text/xml; charset=utf-8";
            _flow.StServiceCallActivity5.TransportProtocol.SOAPProperties.Timeout = (int)100000;
            _flow.StServiceCallActivity5.Service = @"MemberAccounts";
            _flow.StServiceCallActivity5.Port = @"BasicHttpBinding_IMemberAccounts";
            _flow.StServiceCallActivity5.Operation = @"getMemberDetail";
            _flow.StServiceCallActivity5.IsOneWay = false;
            _flow.StServiceCallActivity5.SendRequestToService=true;
            _flow.StServiceCallActivity5.FaultExpected=false;
            _flow.StServiceCallActivity5.IsAsync=false;
            _flow.StServiceCallActivity5.TargetNamespace=@"http://hp.com/SOAQ/ServiceSimulation/2010/demo/01";
            _flow.StServiceCallActivity5.ListenOnPort = (int)0;
            _flow.StServiceCallActivity5.StartStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionStart;
            _flow.StServiceCallActivity5.EndStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionEnd;
            _flow.StServiceCallActivity5.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi87 = new VTDPropertyInfoBase("OutputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='memberSearchResponse'][1]/*[local-name(.)='memberSearchResult'][1]/*[local-name(.)='Member'][{Array0}]/*[local-name(.)='memberId'][1]");
            VTDBaseGetter binding_getter44 = new VTDXPathGetter(pi87,XmlTypeCode.Long);
            binding_getter44 = new XPathGetterDecorator(binding_getter44,"{Array0}",1);
            VTDPropertyInfoBase pi88 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='getMemberDetail'][1]/*[local-name(.)='memberId'][1]");
            VTDBaseSetter binding_setter44 = new VTDXPathSetter(pi88,XmlTypeCode.Long);
            bind_dir44 = new BindDirection(_flow.StServiceCallActivity7,binding_getter44,binding_setter44,BindTargetType.ToInProperty);
            _flow.StServiceCallActivity5.InDirections.Add(bind_dir44);
            
        }
        
        internal void InitializeEncryptionManagerValues()
        {
        
        }
        	public LoadRunner.LrApi LrApi
    	{
    		set { this.lr = value; }
    	}
    
    	protected override STExecutionResult ExecuteStep()
        {
            return base.ExecuteStep();
        }
    
        public void Start()
        {
            this.ExecuteStep();
            WorkFlowScript_Completed();
        }
        
    
        void Workflow_Executing()
        {	        
        }
        
        void WorkFlowScript_Completed()
        {
          	OnExecutionCompleted();
        }
                    
        void TransactionStart(object sender, EventArgs args)
        {
          	STActivityBase activity = sender as STActivityBase;
          	lr.start_transaction(activity.Name);
        }
            
        void TransactionEnd(object sender, EventArgs args)
        {
           	STActivityBase activity = sender as STActivityBase;
           	lr.end_transaction(activity.Name, lr.PASS);
        }
    
        private void UpdateTestSettings(ISTRunTimeContext ctx)
        {
           	
        }
    
    }
    
    public partial class VuserClass
    {
    	STRunTimeContext ctx;
        LRWorkFlowScript script;
    
        public int Action()
        {
    		
    		try
    		{
    			
                script.LrApi = lr;
                script.InitializeComponent();
                script.Start();
            }
            catch (Exception)
            {
    			// todo: log the error message
            }
            
            return 0;
        }
        
        private void SendLogToVugen(string logText)
    	{
    		lr.log_message(logText);
    	}
    }
    
    }
    